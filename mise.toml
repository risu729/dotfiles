# ref: https://mise.jdx.dev/configuration.html
#:schema https://mise.jdx.dev/schema/mise.json

[tools]
# renovate: packageName=oven-sh/bun extractVersion=^bun-v(?<version>.+)
bun = "1.1.13"
# renovate: datasource=node
node = "22.3.0" # cspell:ignore datasource
# renovate: datasource=crate
"ubi" = "0.0.32"
# renovate: extractVersion=^cli/v(?<version>.+)
"ubi:biomejs/biome" = "cli/v1.8.1"
# renovate: packageName=rhysd/actionlint
actionlint = "1.7.1" # cspell:ignore rhysd
"ubi:suzuki-shunsuke/ghalint" = "v0.2.11" # cspell:ignore shunsuke
"ubi:suzuki-shunsuke/pinact" = "v0.2.0"
# taplo does not provide pre-built binaries in github releases
# ref: https://github.com/tamasfe/taplo/releases/tag/release-taplo-cli-0.9.0
"cargo:taplo-cli" = "0.9.0"
"npm:prettier" = "3.3.2"
"npm:markdownlint-cli2" = "0.13.0"
# renovate: packageName=mvdan/sh
shfmt = "3.8.0" # cspell:ignore mvdan
# renovate: packageName=koalaman/shellcheck
shellcheck = "0.10.0" # cspell:ignore koalaman
# renovate: packageName=google/yamlfmt
yamlfmt = "0.12.1"
# renovate: datasource=pypi
yamllint = "1.35.1" # cspell:ignore pypi
"npm:renovate" = "37.407.1"
"npm:cspell" = "8.8.4"
"ubi:lycheeverse/lychee" = "v0.15.1" # cspell:ignore lycheeverse
# renovate: extractVersion=^v(?<version>\d+\..+)
"ubi:crate-ci/typos" = "v1.22.7"

[tasks.commit]
depends = ["buni:root"]
run = ["git add .", "bun run git-cz"]

[tasks."commit:staged"]
depends = ["buni:root"]
run = "bun run git-cz"

[tasks.check]
depends = [
	"check:*", # lint and/or fix formatting
	"lint:*", # lint only
]

[tasks.ci]
depends = [
	"ci:*", # lint and/or check formatting
	"lint:*", # lint only
]
hide = true

[tasks."check:biome"]
run = "biome check --write --error-on-warnings"
[tasks."ci:biome"]
run = "biome ci --error-on-warnings"
hide = true

[tasks."check:tsc"]
depends = ["buni"]
run = ["bun run tsc", "bun run --cwd worker tsc"]
[tasks."ci:tsc"]
depends = ["buni"]
run = [
	"bun run tsc --incremental false",
	"bun run --cwd worker tsc --incremental false",
]
hide = true

[tasks."lint:jsonschema"]
depends = ["buni:root"]
run = "bun run scripts/validate-json-schema.ts"
alias = "check:jsonschema"

[tasks."lint:actionlint"]
run = "actionlint -color"
alias = "check:actionlint"

[tasks."lint:ghalint"]
run = "ghalint run"
alias = "check:ghalint"

[tasks."check:pinact"]
run = "pinact run --verify"
[tasks."ci:pinact"]
depends = ["check:pinact"]
run = "mise run util:nodiff"
hide = true

[tasks."check:taplo"]
# schema of wrangler.toml is in node_modules
depends = ["buni:worker"]
run = ["taplo lint", "taplo fmt"]
[tasks."ci:taplo"]
depends = ["buni:worker"]
run = ["taplo lint", "taplo fmt --check --diff"]
hide = true

[tasks."check:prettier"]
run = "prettier --write --cache ."
[tasks."ci:prettier"]
run = "prettier --check ."
hide = true

[tasks."check:markdownlint"]
run = "markdownlint-cli2 --fix"
[tasks."ci:markdownlint"]
run = "markdownlint-cli2"
hide = true

[tasks."check:shfmt"]
run = "shfmt --list --write --simplify . **/.bashrc **/.profile"
[tasks."ci:shfmt"]
run = "shfmt --diff --simplify . **/.bashrc **/.profile"
hide = true

[tasks."lint:shellcheck"]
run = "shellcheck **/*.sh **/.bashrc **/.profile"
alias = "check:shellcheck"

[tasks."check:yamlfmt"]
run = "yamlfmt ."
[tasks."ci:yamlfmt"]
run = "yamlfmt -lint ."
hide = true

[tasks."lint:yamllint"]
run = "yamllint --strict ."
alias = "check:yamllint"

[tasks."lint:renovate"]
run = "renovate-config-validator --strict"
alias = "check:renovate"

[tasks."check:cspell"]
run = "cspell --cache \"**/*\""
[tasks."ci:cspell"]
run = "cspell \"**/*\""
hide = true

[tasks."check:lychee"]
run = "lychee --cache \"**/*\""
[tasks."ci:lychee"]
run = "lychee --verbose \"**/*\""
hide = true

[tasks."check:typos"]
run = "typos --write-changes"
[tasks."ci:typos"]
run = "typos"
hide = true

[tasks."check:ignore-sync"]
depends = ["buni:root"]
run = "bun run ignore-sync ."
[tasks."ci:ignore-sync"]
depends = ["check:ignore-sync"]
run = "mise run util:nodiff"
hide = true

[tasks."worker:dev"]
depends = ["buni:worker", "worker:util:prepare-vars"]
run = "bun run wrangler dev --compatibility-date $(mise run worker:util:extract-compat-date)"
dir = "worker"

[tasks."worker:test"]
depends = ["buni:worker"]
run = "bun run vitest watch --ui"
dir = "worker"
[tasks."worker:test:ci"]
depends = ["buni:worker"]
run = "bun run vitest run"
dir = "worker"

[tasks."buni"] # cspell:ignore buni
depends = ["buni:root", "buni:worker"]

[tasks."buni:root"]
run = "bun install --frozen-lockfile"
hide = true

[tasks."buni:worker"]
run = "bun install --frozen-lockfile"
dir = "worker"
hide = true

[tasks."util:nodiff"] # cspell:ignore nodiff
run = ["git add .", "git diff --staged --exit-code"]
hide = true

[tasks."sync:brew"]
run = "brew bundle dump --global --force"
