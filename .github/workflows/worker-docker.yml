name: Build Workers Docker Image

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/worker-docker.yml
      - worker/tasks/ci/worker-docker/**
      - worker/docker/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/worker-docker.yml
      - worker/tasks/ci/worker-docker/**
      - worker/docker/**
  workflow_dispatch:

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  build-worker-image:
    name: Build Cloudflare Workers Docker Image
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read # for checkout
      packages: write # for GitHub Package Registry

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}/worker

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          sparse-checkout: |
            mise.toml
            tasks.toml
            tasks/
            worker/
          persist-credentials: false

      - name: Install mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.9.24
          cache: false
        env:
          MISE_ENABLE_TOOLS: jc
          GITHUB_TOKEN: ${{ github.token }}

      - name: Retrieve worker Docker image info
        id: image-info
        run: mise run ci:worker-docker:image-info
        env:
          MISE_AUTO_INSTALL: false
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          GITHUB_TOKEN: ${{ github.token }}

      # cspell:ignore buildx
      - name: Setup Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          cache-binary: false

      - name: Build Docker image
        id: build
        # if mise version is not changed, check if the image digest is changed
        if: steps.image-info.outputs.is_mise_version_changed == 'false'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ./worker/docker
          build-args: |
            MISE_VERSION=${{ steps.image-info.outputs.mise_version }}
          provenance: false

      - name: Login to GitHub Container Registry
        id: login
        # create a new package if the package is not found in PR
        if: >-
          (github.event_name != 'pull_request' &&
            steps.build.outputs.digest != steps.image-info.outputs.latest_tag_digest ) ||
          steps.image-info.outputs.latest_tag == ''
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        if: steps.login.outcome != 'skipped'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ./worker/docker
          build-args: |
            MISE_VERSION=${{ steps.image-info.outputs.mise_version }}
          push: true
          # avoid image without manifest created
          # ref: https://github.com/docker/build-push-action/issues/900
          provenance: false
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.image-info.outputs.new_tag }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest

  actions-timeline:
    name: Generate Actions Timeline
    needs:
      - build-worker-image
    if: ${{ !cancelled() }}

    runs-on: ubuntu-24.04
    timeout-minutes: 5
    permissions:
      actions: read # for actions-timeline

    steps:
      - name: actions-timeline
        # cspell:ignore kesin
        uses: Kesin11/actions-timeline@a7eaabf426cdae26c3582c3fa674b897170dec8f # v2.2.4
