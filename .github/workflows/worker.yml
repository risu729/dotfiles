name: Cloudflare worker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * SUN"

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  test-worker:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read # for checkout

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            mise.toml
            mise-tasks/*
            worker/*
          sparse-checkout-cone-mode: false

      - name: Install mise
        uses: jdx/mise-action@63a673876c7072c1d6ecb2049c0d572976c83b22 # v2.1.7
        with:
          version: 2024.11.28
          install_args: bun
          cache_save: ${{ github.ref_name == 'main' }}

      - name: Run tests
        run: mise run worker:test:ci

  deploy-worker:
    needs:
      - test-worker

    # skip for main branch as Cloudflare workers builds will deploy automatically
    if: github.event_name != 'push'

    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read # for checkout

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            mise.toml
            mise-tasks/*
            worker/*
          sparse-checkout-cone-mode: false

      - name: Install mise
        uses: jdx/mise-action@63a673876c7072c1d6ecb2049c0d572976c83b22 # v2.1.7
        with:
          version: 2024.11.28
          install_args: bun
          cache_save: ${{ github.ref_name == 'main' }}

      - name: Install package.json dependencies
        run: mise run buni:worker

      - name: Get Wrangler args
        id: wrangler-args
        run: |
          args=$(mise run worker:wrangler-args)
          echo "args=${args}" >> "${GITHUB_OUTPUT}"

      - name: Deploy to Cloudflare workers with Wrangler
        uses: cloudflare/wrangler-action@05f17c4a695b4d94b57b59997562c6a4624c64e4 # v3.12.1
        with:
          workingDirectory: worker
          command: deploy --dry-run ${{ steps.wrangler-args.outputs.args }}

  actions-timeline:
    needs:
      - deploy-worker
    if: ${{ !cancelled() }}

    runs-on: ubuntu-24.04
    timeout-minutes: 5
    permissions:
      actions: read # for actions-timeline

    steps:
      - name: actions-timeline
        # cspell:ignore kesin
        uses: Kesin11/actions-timeline@3046833d9aacfd7745c5264b7f3af851c3e2a619 # v2.2.1
